#!/usr/bin/env bash

get_hub(){
  echo '{"targets": ["hub.k0s.io"], "labels": {"job": "__hub__"}}'
}

get_agents(){
  curl -s https://hub.k0s.io/api/agents/list \
  | jq -c '.[]|{"targets": ["hub.k0s.io"], "labels": {"job": "\(.name)", "__metrics_path__": "/api/agent/\(.id)/metrics"}}'
}

update_targets(){
  src=/tmp/${targets_file}
  dst=./${targets_file}
  (get_hub && get_agents) | jq -s . >$src;
  if ! diff ${src} ${dst} &>/dev/null; then
    cp -v ${src} ${dst}
    cat ${dst} | jq -c .[]
  fi
}

update_targets_loop(){
  while :; do update_targets; sleep 2; done
}

assert_exists(){
  cmds="$@"
  quit=""
  for cmd in $cmds; do
    echo "assert exists: $cmd"
    command -v "$cmd" &>/dev/null || quit+="$cmd "
  done
  
  [[ -n "$quit" ]] && echo "command not found: $quit" && exit 1
}

init(){
  assert_exists curl jq docker-compose
  touch ${targets_file}
  mkdir -p data grafana prometheus
  chmod 777 ${targets_file} data grafana prometheus
}

main(){
  targets_file="prometheus_scrape_targets.json"
  cd $(dirname "$0")
  init
  update_targets_loop &
  docker-compose up
}

main "$@"
