"""
@generated
cargo-raze crate build file.

DO NOT EDIT! Replaced on runs of cargo-raze
"""

# buildifier: disable=load
load(
    "@io_bazel_rules_rust//rust:rust.bzl",
    "rust_binary",
    "rust_library",
    "rust_test",
)

# buildifier: disable=load
load("@bazel_skylib//lib:selects.bzl", "selects")

package(default_visibility = [
    # Public for visibility by "@raze__crate__version//" targets.
    #
    # Prefer access through "//cargo", which limits external
    # visibility to explicit Cargo.toml dependencies.
    "//visibility:public",
])

licenses([
    "notice",  # MIT from expression "MIT"
])

# Generated Targets
# buildifier: disable=load-on-top
load(
    "@io_bazel_rules_rust//cargo:cargo_build_script.bzl",
    "cargo_build_script",
)

cargo_build_script(
    name = "openssl_sys_build_script",
    srcs = glob(["**/*.rs"]),
    build_script_env = {
    },
    crate_features = [
    ],
    crate_root = "build/main.rs",
    data = glob(["**"]),
    edition = "2015",
    rustc_flags = [
        "--cap-lints=allow",
    ],
    tags = [
        "cargo-raze",
        "manual",
    ],
    version = "0.9.60",
    visibility = ["//visibility:private"],
    deps = [
        "//cargo/vendor/autocfg-1.0.1:autocfg",
        "//cargo/vendor/cc-1.0.66:cc",
        "//cargo/vendor/pkg-config-0.3.19:pkg_config",
    ] + selects.with_or({
        # cfg(target_env = "msvc")
        (
            "@io_bazel_rules_rust//rust/platform:x86_64-pc-windows-msvc",
        ): [
            "//cargo/vendor/vcpkg-0.2.11:vcpkg",
        ],
        "//conditions:default": [],
    }),
)

rust_library(
    name = "openssl_sys",
    srcs = glob(["**/*.rs"]),
    aliases = {
    },
    crate_features = [
    ],
    crate_root = "src/lib.rs",
    crate_type = "lib",
    data = [],
    edition = "2015",
    rustc_flags = [
        "--cap-lints=allow",
    ],
    tags = [
        "cargo-raze",
        "manual",
    ],
    version = "0.9.60",
    # buildifier: leave-alone
    deps = [
        ":openssl_sys_build_script",
        "//cargo/vendor/libc-0.2.81:libc",
    ] + selects.with_or({
        # cfg(target_env = "msvc")
        (
            "@io_bazel_rules_rust//rust/platform:x86_64-pc-windows-msvc",
        ): [
        ],
        "//conditions:default": [],
    }),
)
