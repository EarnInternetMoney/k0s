load("@io_bazel_rules_go//go:def.bzl", "go_library")

package(
    default_visibility = ["//visibility:public"],
    licenses = ["notice"],  # Apache 2.0
)

go_library(
    name = "go_default_library",
    srcs = [
        "any_value.go",
        "bool.go",
        "bytes.go",
        "doc.go",
        "double.go",
        "duration.go",
        "err.go",
        "int.go",
        "iterator.go",
        "json_list.go",
        "json_struct.go",
        "json_value.go",
        "list.go",
        "map.go",
        "null.go",
        "object.go",
        "provider.go",
        "string.go",
        "timestamp.go",
        "type.go",
        "uint.go",
        "unknown.go",
        "util.go",
    ],
    importmap = "k0s.io/vendor/github.com/google/cel-go/common/types",
    importpath = "github.com/google/cel-go/common/types",
    deps = [
        "//vendor/github.com/golang/protobuf/jsonpb:go_default_library",
        "//vendor/github.com/golang/protobuf/proto:go_default_library",
        "//vendor/github.com/golang/protobuf/protoc-gen-go/descriptor:go_default_library",
        "//vendor/github.com/golang/protobuf/ptypes:go_default_library",
        "//vendor/github.com/golang/protobuf/ptypes/any:go_default_library",
        "//vendor/github.com/golang/protobuf/ptypes/duration:go_default_library",
        "//vendor/github.com/golang/protobuf/ptypes/struct:go_default_library",
        "//vendor/github.com/golang/protobuf/ptypes/timestamp:go_default_library",
        "//vendor/github.com/golang/protobuf/ptypes/wrappers:go_default_library",
        "//vendor/github.com/google/cel-go/common/overloads:go_default_library",
        "//vendor/github.com/google/cel-go/common/types/pb:go_default_library",
        "//vendor/github.com/google/cel-go/common/types/ref:go_default_library",
        "//vendor/github.com/google/cel-go/common/types/traits:go_default_library",
        "//vendor/google.golang.org/genproto/googleapis/api/expr/v1alpha1:go_default_library",
    ],
)
